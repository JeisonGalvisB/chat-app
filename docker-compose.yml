# docker-compose.yml
version: '3.8'

services:
  # MongoDB
  mongo:
    image: mongo:6.0
    container_name: chat-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: chat-app
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - chat-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/chat-app --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (opcional, para pruebas con Docker)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chat-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongo:27017/chat-app
      - FRONTEND_URL=http://localhost:5173
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src  # Hot reload en desarrollo
    networks:
      - chat-network
    command: npm run dev

  # Mongo Express (UI para MongoDB - opcional)
  mongo-express:
    image: mongo-express:latest
    container_name: chat-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongo
    networks:
      - chat-network

volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local

networks:
  chat-network:
    driver: bridge